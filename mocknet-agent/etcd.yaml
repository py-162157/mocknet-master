apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mocknet-etcd
  namespace: kube-system
  labels:
    k8s-app: mocknet-etcd
spec:
  serviceName: mocknet-etcd
  selector:
    matchLabels:
      k8s-app: mocknet-etcd
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: mocknet-etcd
      annotations:
        # Marks this pod as a critical add-on.
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      tolerations:
        # We need this to schedule on the master no matter what else is going on, so tolerate everything.
        - key: ''
          operator: Exists
          effect: ''
        # This likely isn't needed due to the above wildcard, but keep it in for now.
        - key: CriticalAddonsOnly
          operator: Exists
      # Only run this pod on the master.
      nodeSelector:
        node-role.kubernetes.io/master: ""
      hostNetwork: true

      containers:
        - name: mocknet-etcd
          image: quay.io/coreos/etcd:v3.3.24
          imagePullPolicy: IfNotPresent
          env:
            - name: MOCKNET_ETCD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: ETCDCTL_API
              value: "3"
          command:
            - /bin/sh
          args:
            - -c
            - /usr/local/bin/etcd --name=mocknet-etcd --data-dir=/var/MOCKNET/mocknet-data
              --advertise-client-urls=http://0.0.0.0:22379 --listen-client-urls=http://0.0.0.0:22379 --listen-peer-urls=http://0.0.0.0:22380
          volumeMounts:
            - name: var-etcd
              mountPath: /var/etcd/
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  echo "$HOST_IP" | grep -q ':'
                  if [ "$?" -eq "0" ];
                  then
                     HOST_IP="[$HOST_IP]"
                  fi
                  etcdctl get --endpoints=$HOST_IP:22379 /
            periodSeconds: 3
            initialDelaySeconds: 20
          resources:
            requests:
              cpu: 100m
      volumes:
        - name: var-etcd
          hostPath:
            path: /var/etcd

---

apiVersion: v1
kind: Service
metadata:
  name: mocknet-etcd
  namespace: kube-system
spec:
  type: NodePort
  # Match mocknet-etcd DaemonSet.
  selector:
    k8s-app: mocknet-etcd
  ports:
    - port: 22379
      nodePort: 32379